{"version":3,"sources":["actions/_constants.jsx","reducers/homeReducer.jsx","reducers/loginReducer.jsx","reducers/accountReducer.jsx","reducers/HUGOreducer.jsx","reducers/reducer.jsx","store.jsx","components/slate/editorComponents.jsx","components/slate/textEditor.jsx","components/messageBoard.jsx","components/stats.jsx","actions/homeActions.jsx","pages/home.jsx","actions/loginActions.jsx","pages/login.jsx","pages/builds.jsx","components/contribution.jsx","selectors/accountSelector.jsx","actions/accountActions.jsx","pages/account.jsx","connected/protectedRoute.jsx","pages/notFound.jsx","connected/nav.jsx","pages/network.jsx","components/calendar/month.jsx","components/calendar/year.jsx","components/calendar/week.jsx","components/calendar/calendar.jsx","selectors/HUGOSelector.jsx","actions/HUGOactions.jsx","pages/HUGO.jsx","app.jsx","serviceWorker.js","index.jsx"],"names":["loginConstants","homeConstants","accountConstants","HUGOConstants","stats","title","userId","time","checked","value","posts","body","children","text","code","type","loginReducer","state","action","loggingIn","loggedIn","user","username","password","icon","HUGOItems","id","personID","date","Date","events","start","end","overflow","HUGOFilter","interval","HUGOColor","colorMax","tinycolor","colorMin","valueMax","Math","max","apply","map","entry","event","reduce","a","b","valueMin","min","combineReducers","HUGOEntries","year","day","length","filter","item","filterType","newPassword","newIcon","builds","buildsReducer","parseInt","stat","index","statName","sender","postDate","postTitle","postBody","history","createBrowserHistory","loggerMiddleware","createLogger","routingMiddleware","routerMiddleware","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","Button","React","forwardRef","ref","className","active","reversed","props","cx","css","Icon","Menu","Toolbar","HOTKEYS","LIST_TYPES","toggleMark","editor","format","isMarkActive","Editor","removeMark","addMark","isBlockActive","nodes","match","n","marks","Element","attributes","element","Leaf","leaf","bold","italic","underline","BlockButton","useSlate","onMouseDown","preventDefault","isActive","isList","includes","Transforms","unwrapNodes","split","setNodes","block","wrapNodes","toggleBlock","MarkButton","RichTextEditor","setValue","renderElement","useCallback","renderLeaf","useMemo","withHistory","withReact","createEditor","onChange","placeholder","spellCheck","autoFocus","onKeyDown","hotkey","isHotkey","initialValue","MessageBoard","useState","selectedPost","setSelectedPost","newPost","setNewPost","newPostTitle","setNewPostTitle","selectValue","setSelectValue","viewPost","selectPost","stopPropagation","forEach","post","target","setView","e","Typography","onSubmit","now","toString","List","console","log","ListItem","key","onClick","TextField","label","name","readOnly","Stats","newStatName","setNewStatName","newStatValue","setNewStatValue","updateNewStat","newStat","increaseStats","decreaseStats","deleteStats","FormGroup","FormControlLabel","control","Checkbox","selectStat","homeActions","incrementStats","decrementStats","Home","variant","this","selectStats","newStats","Component","connect","dispatch","poster","loginActions","login","userName","push","sessionStorage","setItem","JSON","stringify","logout","register","Login","submitLogin","bind","loginChange","formRef","createRef","setState","submit","color","createAccount","Builds","gutterButtom","Contribution","contribs","contrib","userSelector","userPostSelector","createSelector","userStatSelector","accountActions","changePassword","oldPassword","changeIcon","Account","newPasswordRepeat","passwordErrorMessage","updatePassword","updateIcon","Tooltip","Avatar","alt","src","ProtectedRoute","component","render","authenticated","to","Nav","currentTab","nextTab","Drawer","open","anchor","Divider","button","Link","ListItemText","primary","Network","Month","days","setDays","useEffect","genDays","calendarStart","startOfMonth","currentDate","isMonday","subDays","i","pushed","isEqual","addDays","Array","fill","style","setCellColor","Year","startOfYear","emptyDays","getDaysInYear","addMonths","Week","startOfWeek","weekStartsOn","keyPart","hours","currentTime","random","substring","backgroundColor","eventLength","setHourCellColor","genWeekDay","Calendar","selected","setSelected","datePaginate","setDatePaginate","startValue","setStartValue","endOfMonth","endValue","setEndValue","minChanger","setMinChanger","maxChanger","setMaxChanger","setNewBounds","changeView","changeColor","newStart","newEnd","endOfWeek","endOfYear","totalLength","mix","newDate","addWeeks","addYears","subWeeks","subMonths","subYears","hidden","onChangeComplete","hex","background","AppBar","position","Tabs","newTab","Tab","HUGOEntriesSelector","isWithinInterval","HUGOActions","newHugoEntry","deleteHugoEntry","changeHugoView","setHugoColor","setHugoValue","HUGO","changeCalendarView","App","path","exact","from","NotFound","Boolean","window","location","hostname","parse","getItem","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e2a14a88.chunk.js","sourcesContent":["export const loginConstants = { \r\n    LOGIN_REQUEST: 'USER_LOGON_REQUEST',\r\n    \r\n    LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USER_LOGIN_FAILURE',\r\n\r\n    REGISTER_REQUEST: 'USER_REGISTER_REQUEST',\r\n\r\n    REGISTER_SUCCESS: 'USER_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USER_REGISTER_FAILURE',\r\n\r\n    LOGOUT: 'USER_LOGOUT'\r\n}\r\n\r\nexport const homeConstants = {\r\n    STAT_NEW: 'STAT_NEW',\r\n    STAT_DELETE: 'STAT_DELETE',\r\n    STAT_INCREMENT: 'STAT_INCREMENT',\r\n    STAT_DECREMENT: 'STAT_DECREMENT',\r\n    STAT_SELECT: 'STAT_SELECT',\r\n\r\n    STAT_SUCCESS: 'STAT_SUCCESS',\r\n    STAT_FAILURE: 'STAT_FAILURE',\r\n\r\n    POST_SELECT: 'POST_SELECT',\r\n    POST_NEW:'POST_NEW',\r\n    POST_EDIT:'POST_EDIT',\r\n\r\n    POST_FAILURE: 'POST_FAILURE',\r\n    POST_SUCCESS: 'POST_SUCCESS'\r\n}\r\n\r\nexport const accountConstants = {\r\n    PWD_CHANGE: 'PWD_CHANGE',\r\n    PWD_SUCCESS: 'PWD_SUCCESS',\r\n    PWD_FAILURE: 'PWD_FAILURE',\r\n\r\n    ICON_CHANGE: 'ICON_CHANGE',\r\n    ICON_SUCCESS: 'ICON_SUCCESS',\r\n    ICON_FAILURE: 'ICON_FAILURE'\r\n}\r\n\r\nexport const HUGOConstants = {\r\n    HUGO_ENTRY: 'NEW_HUGO_ENTRY',\r\n    HUGO_ENTRY_FAILURE: 'HUGO_ENTRY_FAILURE',\r\n    HUGO_ENTRY_SUCCESS: 'HUGO_ENTRY_SUCCESS',\r\n    HUGO_ENTRY_DELETE: 'HUGO_ENTRY_DELETE',\r\n\r\n    CHANGE_CALENDAR_VIEW: 'CHANGE_CALENDAR_VIEW',\r\n\r\n    SET_HUGO_VALUE: 'SET_HUGO_VALUE',\r\n    SET_HUGO_COLOR: 'SET_HUGO_COLOR'\r\n}","import { homeConstants } from '../actions/_constants'\r\nconst stats = [\r\n    {\r\n        title: 'Jazz',\r\n        userId: 'admin',\r\n        time: '26/13/56', \r\n        checked: false,\r\n        value: 1000,\r\n    },\r\n    {\r\n        title: 'Fucks Given',\r\n        userId: 'admin',\r\n        time: '34/64/11', \r\n        checked: false,\r\n        value: 0,\r\n    },\r\n    {\r\n        title: 'joints smoked',\r\n        userId: 'daniel',\r\n        time: '12/53/77', \r\n        checked: false,\r\n        value: 420,\r\n    }\r\n]\r\n\r\nconst posts = [\r\n    {\r\n        title: 'Hugo is unacceptable',\r\n        userId: 'Daniel',\r\n        time: '12/3/19',\r\n        body: [\r\n            {\r\n              children: [\r\n                {\r\n                  text:\r\n                    \"By default, pasting content into a Slate editor will use the clipboard's \",\r\n                },\r\n                { text: \"'text/plain'\", code: true },\r\n                {\r\n                  text:\r\n                    \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintaing its formatting. To do this, your editor needs to handle \",\r\n                },\r\n                { text: \"'text/html'\", code: true },\r\n                { text: ' data. ' },\r\n              ],\r\n            },\r\n            {\r\n              children: [{ text: 'This is an example of doing exactly that!' }],\r\n            },\r\n            {\r\n              children: [\r\n                {\r\n                  text:\r\n                    \"Try it out for yourself! Copy and paste some rendered HTML rich text content (not the source code) from another site into this editor and it's formatting should be preserved.\",\r\n                },\r\n              ],\r\n            },\r\n          ]\r\n    },\r\n    {\r\n        title: 'Hugo will be hung',\r\n        userId: 'admin',\r\n        time: '24/8/17',\r\n        body: [\r\n            {\r\n              type: 'title',\r\n              children: [{ text: 'Enforce Your Layout!' }],\r\n            },\r\n            {\r\n              type: 'paragraph',\r\n              children: [\r\n                {\r\n                  text:\r\n                    'This example shows how to enforce your layout with domain-specific constraints. This document will always have a title block at the top and at least one paragraph in the body. Try deleting them and see what happens!',\r\n                },\r\n              ],\r\n            },\r\n          ]\r\n    },\r\n    {\r\n        title: 'Hugo is a bastard',\r\n        userId: 'admin',\r\n        time: '12/3/99',\r\n        body: [\r\n            {\r\n              children: [\r\n                { text: 'This is editable plain text, just like a <textarea>!' },\r\n              ],\r\n            },\r\n          ]\r\n    }\r\n]\r\n\r\nexport const statsReducer = (state={stats:stats}, action) => {\r\n    switch(action.type) {\r\n        case homeConstants.STAT_NEW:\r\n            return {\r\n                ...state,\r\n                stats: [\r\n                    ...state.stats,\r\n                    {\r\n                        title: action.title,\r\n                        userId: action.userId,\r\n                        time: action.time,\r\n                        value: parseInt(action.value),\r\n                        checked: false\r\n                    }\r\n                ]\r\n            }\r\n        case homeConstants.STAT_DELETE:\r\n            return {\r\n                ...state,\r\n                stats: state.stats.filter((stat) => {\r\n                    return !stat.checked\r\n                })\r\n            }\r\n        case homeConstants.STAT_SELECT:\r\n            return {\r\n                ...state,\r\n                stats: state.stats.map((stat, index) => {\r\n                    if(stat.title === action.statName) {\r\n                        return {\r\n                            ...stat,\r\n                            checked: action.checked\r\n                        }\r\n                    }\r\n                    return stat\r\n                })\r\n            }\r\n        case homeConstants.STAT_INCREMENT:\r\n            return {\r\n                ...state,\r\n                stats: state.stats.map((stat, index) => {\r\n                    if (stat.checked) {\r\n                        return {\r\n                            ...stat,\r\n                            value: stat.value + 1\r\n                        }\r\n                    }\r\n                    return stat\r\n                })\r\n            }\r\n        case homeConstants.STAT_DECREMENT:\r\n            return {\r\n                ...state,\r\n                stats: state.stats.map((stat, index) => {\r\n                    if (stat.checked) {\r\n                        return {\r\n                            ...stat,\r\n                            value: stat.value - 1\r\n                        }\r\n                    }\r\n                    return stat\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const postsReducer = (state={posts:posts}, action) => {\r\n    switch(action.type) {\r\n        case homeConstants.POST_NEW:\r\n            return {\r\n                ...state,\r\n                posts: [\r\n                    ...state.posts,\r\n                    {\r\n                        sender: action.sender,\r\n                        time: action.postDate,\r\n                        title: action.postTitle,\r\n                        body: action.postBody\r\n                    }\r\n                ]\r\n            }\r\n        case homeConstants.POST_SELECT:\r\n            return {\r\n                ...state\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n//send message\r\n//recieve messages","import { loginConstants } from '../actions/_constants'\r\n//login\r\n//logout\r\n//wrong password\r\n//newUser\r\n//wrong new user information\r\n\r\nconst loginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case loginConstants.LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loggingIn: true,\r\n            };\r\n        case loginConstants.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loggedIn: true,\r\n            };\r\n        case loginConstants.LOGIN_FAILURE:\r\n            return {\r\n                ...state\r\n            };\r\n        case loginConstants.LOGOUT:\r\n            return {\r\n                ...state\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loginReducer","import { accountConstants } from '../actions/_constants'\r\n\r\n\r\nconst user = {\r\n    username: 'adminerino',\r\n    userId: 'admin',\r\n    password: '',\r\n    icon: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.uR3KgRq-sJayRblSz7i40QHaLF%26pid%3DApi&f=1',\r\n}\r\n\r\nexport const accountReducer = (state={user:user}, action) => {\r\n    switch(action.type) {\r\n        case accountConstants.PWD_CHANGE:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    password: action.newPassword\r\n                }\r\n            }\r\n        case accountConstants.ICON_CHANGE:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    icon: action.newIcon\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { HUGOConstants } from '../actions/_constants'\r\nimport tinycolor from 'tinycolor2'\r\n\r\nconst HUGOItems = [\r\n    {\r\n        id: '119',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 1),\r\n        events: [{start: 15, end: 21}]\r\n    },\r\n    {\r\n        id: '120',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 2),\r\n        events: [{start: 19, end: 23, overflow: 10}]\r\n    },\r\n    {\r\n        id: '121',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 3),\r\n        events: [{start: 0, end: 4, overflow: 10}]\r\n    },\r\n    {\r\n        id: '118',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 12),\r\n        events: [{start: 14, end: 16}]\r\n    },\r\n    {\r\n        id: '111',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 17),\r\n        events: [{start: 5, end: 12}]\r\n    },\r\n    {\r\n        id: '112',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 18),\r\n        events: [{start: 12, end: 15}]\r\n    },\r\n    {        \r\n        id: '113',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 19),\r\n        events: [{start: 19, end: 23, overflow: 8}]\r\n    },\r\n    {\r\n        id: '114',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 20),\r\n        events: [{start: 0, end: 2, overflow: 8}, {start: 12, end: 23}]\r\n    },\r\n    {\r\n        id: '115',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 21),\r\n        events: [{start: 18, end: 23, overflow: 10}]\r\n    },\r\n    {\r\n        id: '116',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 22),\r\n        events: [{start: 0, end: 3, overflow: 10}, {start: 19, end: 23, overflow: 8}]\r\n    },\r\n    {\r\n        id: '117',\r\n        personID: 'HUGO',\r\n        date: new Date(2020, 4, 23),\r\n        events: [{start: 0, end: 2, overflow: 8}, {start: 20, end: 23}]\r\n    }\r\n]\r\n\r\nconst HUGOFilter = {\r\n    type: 'year',\r\n    interval: {start: new Date(2020, 1, 1), end: new Date(2020, 1, 1)}\r\n}\r\n\r\nconst HUGOColor = {\r\n    colorMax: tinycolor('#3366ff'),\r\n    colorMin: tinycolor('#ff0000'),\r\n    \r\n    // eslint-disable-next-line\r\n    valueMax: Math.max.apply(Math, HUGOItems.map((entry) => { return entry.events.map((event) => { return event.end - event.start }).reduce((a, b) => a + b, 0)})),\r\n    // eslint-disable-next-line\r\n    valueMin: Math.min.apply(Math, HUGOItems.map((entry) => { return Math, entry.events.map((event) => { return event.end - event.start }).reduce((a, b) => a + b, 0)}))\r\n}\r\n\r\nexport const HUGOReducer = (state={HUGOItems, HUGOFilter, HUGOColor}, action) => {\r\n    switch(action.type) {\r\n        case HUGOConstants.HUGO_ENTRY:\r\n            return {\r\n                ...state,\r\n                HUGOItems: [\r\n                    ...state.HUGOItems,\r\n                    {\r\n                        id: action.id,\r\n                        year: action.year,\r\n                        day: action.day,\r\n                        length: action.length\r\n                    }\r\n                ]\r\n            }\r\n        case HUGOConstants.HUGO_ENTRY_DELETE:\r\n            return {\r\n                ...state,\r\n                HUGOItems: state.HUGOItems.filter((item) => {\r\n                    return !item.id === action.id\r\n                })\r\n            }\r\n        case HUGOConstants.CHANGE_CALENDAR_VIEW:\r\n            return {\r\n                ...state,\r\n                HUGOFilter: {\r\n                    type: action.filterType, \r\n                    interval: action.interval\r\n                }\r\n            }\r\n\r\n        case HUGOConstants.SET_HUGO_COLOR:\r\n            return {\r\n                ...state,\r\n                HUGOColor: {\r\n                    ...state.HUGOColor,\r\n                    colorMax: action.colorMax,\r\n                    colorMin: action.colorMin\r\n                }\r\n            }\r\n        case HUGOConstants.SET_HUGO_VALUE:\r\n            return {\r\n                ...state,\r\n                HUGOColor: {\r\n                    ...state.HUGOColor,\r\n                    valueMin: action.valueMin,\r\n                    valueMax: action.valueMax\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport buildsReducer from './buildsReducer'\r\nimport { statsReducer, postsReducer } from './homeReducer'\r\nimport loginReducer from './loginReducer'\r\nimport { accountReducer } from './accountReducer'\r\nimport { HUGOReducer } from './HUGOreducer'\r\n\r\nexport default combineReducers({\r\n    HUGOEntries: HUGOReducer,\r\n    user: accountReducer,\r\n    builds: buildsReducer,\r\n    stats: statsReducer,\r\n    posts: postsReducer,\r\n    loginReducer,\r\n})","import { createBrowserHistory } from 'history';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport { routerMiddleware } from 'react-router-redux';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst loggerMiddleware = createLogger();\r\nconst routingMiddleware = routerMiddleware(history);\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware,\r\n        routingMiddleware\r\n    )\r\n);\r\n","import React from 'react'\r\nimport { cx, css } from 'emotion'\r\n\r\n\r\nexport const Button = React.forwardRef(\r\n    ({ className, active, reversed, ...props }, ref) => (\r\n      <span\r\n        {...props}\r\n        ref={ref}\r\n        className={cx(\r\n          className,\r\n          css`\r\n            cursor: pointer;\r\n            color: ${reversed\r\n              ? active\r\n                ? 'white'\r\n                : '#aaa'\r\n              : active\r\n              ? 'black'\r\n              : '#ccc'};\r\n          `\r\n        )}\r\n      />\r\n    )\r\n  )\r\n\r\nexport const Icon = React.forwardRef(({ className, ...props }, ref) => (\r\n    <span\r\n      {...props}\r\n      ref={ref}\r\n      className={cx(\r\n        'material-icons',\r\n        className,\r\n        css`\r\n          font-size: 18px;\r\n          vertical-align: text-bottom;\r\n        `\r\n      )}\r\n    />\r\n  ))\r\n\r\nexport const Menu = React.forwardRef(({ className, ...props }, ref) => (\r\n    <div\r\n      {...props}\r\n      ref={ref}\r\n      className={cx(\r\n        className,\r\n        css`\r\n          & > * {\r\n            display: inline-block;\r\n          }\r\n          & > * + * {\r\n            margin-left: 15px;\r\n          }\r\n        `\r\n      )}\r\n    />\r\n  ))  \r\n\r\nexport const Toolbar = React.forwardRef(({ className, ...props }, ref) => (\r\n    <Menu\r\n      {...props}\r\n      ref={ref}\r\n      className={cx(\r\n        className,\r\n        css`\r\n          position: relative;\r\n          padding: 1px 18px 17px;\r\n          margin: 0 -20px;\r\n          border-bottom: 2px solid #eee;\r\n          margin-bottom: 20px;\r\n        `\r\n      )}\r\n    />\r\n  ))","import React, { useCallback, useMemo } from 'react'\r\nimport isHotkey from 'is-hotkey'\r\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\r\nimport { Editor, Transforms, createEditor } from 'slate'\r\nimport { withHistory } from 'slate-history'\r\n\r\nimport { Button, Icon, Toolbar } from './editorComponents'\r\n\r\nconst HOTKEYS = {\r\n  'mod+b': 'bold',\r\n  'mod+i': 'italic',\r\n  'mod+u': 'underline',\r\n  'mod+`': 'code',\r\n}\r\n\r\nconst LIST_TYPES = ['numbered-list', 'bulleted-list']\r\n\r\nconst RichTextEditor = (props) => {\r\n  const value = props.value\r\n  const setValue = props.setValue\r\n  const renderElement = useCallback(props => <Element {...props} />, [])\r\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\r\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\r\n\r\n  return (\r\n    <Slate editor={editor} value={value} onChange={value => setValue(value)}>\r\n      <Toolbar>\r\n        <MarkButton format=\"bold\" icon=\"format_bold\" />\r\n        <MarkButton format=\"italic\" icon=\"format_italic\" />\r\n        <MarkButton format=\"underline\" icon=\"format_underlined\" />\r\n        <MarkButton format=\"code\" icon=\"code\" />\r\n        <BlockButton format=\"heading-one\" icon=\"looks_one\" />\r\n        <BlockButton format=\"heading-two\" icon=\"looks_two\" />\r\n        <BlockButton format=\"block-quote\" icon=\"format_quote\" />\r\n        <BlockButton format=\"numbered-list\" icon=\"format_list_numbered\" />\r\n        <BlockButton format=\"bulleted-list\" icon=\"format_list_bulleted\" />\r\n      </Toolbar>\r\n      <Editable\r\n        renderElement={renderElement}\r\n        renderLeaf={renderLeaf}\r\n        placeholder=\"Enter some rich text…\"\r\n        spellCheck\r\n        autoFocus\r\n        onKeyDown={event => {\r\n          for (const hotkey in HOTKEYS) {\r\n            if (isHotkey(hotkey, event)) {\r\n              event.preventDefault()\r\n              const mark = HOTKEYS[hotkey]\r\n              toggleMark(editor, mark)\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </Slate>\r\n  )\r\n}\r\n\r\nconst toggleBlock = (editor, format) => {\r\n  const isActive = isBlockActive(editor, format)\r\n  const isList = LIST_TYPES.includes(format)\r\n\r\n  Transforms.unwrapNodes(editor, {\r\n    match: n => LIST_TYPES.includes(n.type),\r\n    split: true,\r\n  })\r\n\r\n  Transforms.setNodes(editor, {\r\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\r\n  })\r\n\r\n  if (!isActive && isList) {\r\n    const block = { type: format, children: [] }\r\n    Transforms.wrapNodes(editor, block)\r\n  }\r\n}\r\n\r\nconst toggleMark = (editor, format) => {\r\n  const isActive = isMarkActive(editor, format)\r\n\r\n  if (isActive) {\r\n    Editor.removeMark(editor, format)\r\n  } else {\r\n    Editor.addMark(editor, format, true)\r\n  }\r\n}\r\n\r\nconst isBlockActive = (editor, format) => {\r\n  const [match] = Editor.nodes(editor, {\r\n    match: n => n.type === format,\r\n  })\r\n\r\n  return !!match\r\n}\r\n\r\nconst isMarkActive = (editor, format) => {\r\n  const marks = Editor.marks(editor)\r\n  return marks ? marks[format] === true : false\r\n}\r\n\r\nconst Element = ({ attributes, children, element }) => {\r\n  switch (element.type) {\r\n    case 'block-quote':\r\n      return <blockquote {...attributes}>{children}</blockquote>\r\n    case 'bulleted-list':\r\n      return <ul {...attributes}>{children}</ul>\r\n    case 'heading-one':\r\n      return <h1 {...attributes}>{children}</h1>\r\n    case 'heading-two':\r\n      return <h2 {...attributes}>{children}</h2>\r\n    case 'list-item':\r\n      return <li {...attributes}>{children}</li>\r\n    case 'numbered-list':\r\n      return <ol {...attributes}>{children}</ol>\r\n    default:\r\n      return <p {...attributes}>{children}</p>\r\n  }\r\n}\r\n\r\nconst Leaf = ({ attributes, children, leaf }) => {\r\n  if (leaf.bold) {\r\n    children = <strong>{children}</strong>\r\n  }\r\n\r\n  if (leaf.code) {\r\n    children = <code>{children}</code>\r\n  }\r\n\r\n  if (leaf.italic) {\r\n    children = <em>{children}</em>\r\n  }\r\n\r\n  if (leaf.underline) {\r\n    children = <u>{children}</u>\r\n  }\r\n\r\n  return <span {...attributes}>{children}</span>\r\n}\r\n\r\nconst BlockButton = ({ format, icon }) => {\r\n  const editor = useSlate()\r\n  return (\r\n    <Button\r\n      active={isBlockActive(editor, format)}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        toggleBlock(editor, format)\r\n      }}\r\n    >\r\n      <Icon>{icon}</Icon>\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst MarkButton = ({ format, icon }) => {\r\n  const editor = useSlate()\r\n  return (\r\n    <Button\r\n      active={isMarkActive(editor, format)}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        toggleMark(editor, format)\r\n      }}\r\n    >\r\n      <Icon>{icon}</Icon>\r\n    </Button>\r\n  )\r\n}\r\n\r\n\r\nexport default RichTextEditor","import React from 'react';\r\nimport { Button, Typography, List, ListItem, TextField } from '@material-ui/core';\r\nimport { useState, useMemo } from 'react';\r\nimport { Slate, Editable, withReact } from 'slate-react'\r\nimport { createEditor } from 'slate'\r\n\r\nimport RichTextEditor from './slate/textEditor.jsx'\r\n\r\nconst initialValue = [\r\n    {\r\n      type: 'paragraph',\r\n      children: [\r\n        { text: 'This is editable!'},\r\n\r\n      ]\r\n    }\r\n  ]\r\n  \r\nconst MessageBoard = (props) => {\r\n    const [selectedPost, setSelectedPost] = useState(false)\r\n    const [newPost, setNewPost] = useState(initialValue)\r\n    const [newPostTitle, setNewPostTitle] = useState('')\r\n\r\n    const [selectValue, setSelectValue] = useState([])\r\n    const viewPost = useMemo(() => withReact(createEditor()), [])\r\n\r\n    function selectPost(event) {\r\n        event.stopPropagation()\r\n        props.posts.posts.forEach((post) => {\r\n            if (event.target.title === post.time) {\r\n                setSelectedPost(true)\r\n                setView(post.body)\r\n            }\r\n        })\r\n    }\r\n\r\n    function setView(e) {\r\n        setSelectValue(e)\r\n    }\r\n\r\n    function createNewPost(e) {\r\n        e.preventDefault()\r\n        props.newPost(\"Daniel\", Date.now().toString(), newPostTitle, newPost)\r\n    }\r\n\r\n    function updateNewPostTitle(event) {\r\n        setNewPostTitle(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='messageBoardBody'>\r\n            <div className='postList'>\r\n                <Typography>Posts</Typography>\r\n                <form onSubmit={createNewPost}>\r\n                    <div> \r\n                        <List>\r\n                            {\r\n                                props.posts.posts.map((post, index) => {\r\n                                    console.log(post.title)\r\n                                    return (\r\n                                        <ListItem key={post.time} className='postListItem'>\r\n                                            <div title={post.time} onClick={selectPost}>{post.userId + ': :' + post.time + ': :' + post.title}</div>\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                    <div>\r\n                        <Typography>Post Title</Typography>\r\n                        <TextField id='standard-basic' label='Post Title' name='newStatName' onChange={updateNewPostTitle}/>\r\n                        <Button type='submit'>Create Post</Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className='viewPost'>\r\n                <Typography>View Post</Typography>\r\n                <div>\r\n                    {\r\n                        selectedPost ?\r\n                        <Slate editor={viewPost} value={selectValue} onChange={setView}>\r\n                            <Editable readOnly/>\r\n                        </Slate>\r\n                        :\r\n                        <div>you have not selected a post</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className='newPost'>\r\n                <Typography>New Post</Typography>\r\n                <div>\r\n                    <RichTextEditor value={newPost} setValue={setNewPost}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageBoard;\r\n\r\n","import React from 'react'\r\nimport { Typography, TextField, Button, Checkbox, FormGroup, FormControlLabel } from '@material-ui/core';\r\nimport { useState } from 'react';\r\n\r\nconst Stats = (props) => {\r\n    const [newStatName, setNewStatName] = useState('')\r\n    const [newStatValue, setNewStatValue] = useState('')\r\n    \r\n    function updateNewStat(event) {\r\n        if (event.target.name === 'newStatName') {\r\n            setNewStatName(event.target.value)\r\n        } else {\r\n            setNewStatValue(event.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='statsChangeBox'>\r\n            <div className='incrementBox'>\r\n                <div>\r\n                    <Typography>Create New Stat</Typography>\r\n                    <form className='createNewStat' onSubmit={(e) => {\r\n                          e.preventDefault()\r\n                          props.newStat(newStatName, props.user.userId, new Date(), newStatValue)}}>\r\n                        <div className='statValues'>\r\n                            <TextField id='standard-basic' label='Name of Stat' name='newStatName' onChange={updateNewStat}/>\r\n                            <TextField id='standard-number' label='Initial Value' name='newStatValue' type='number' onChange={updateNewStat}/>\r\n                        </div>\r\n                        <Button type='submit'>Create</Button>\r\n                    </form>\r\n                </div>\r\n                <div className='increaseExistingStat'>\r\n                    <Typography>Manage Stats</Typography>\r\n                    <Typography>Number of Stats: {0}</Typography>\r\n                    <div className='increaseButtons'>\r\n                        <Button onClick={() => {props.increaseStats()}}>Increase</Button>\r\n                        <Button onClick={() => {props.decreaseStats()}}>Decrease</Button>\r\n                        <Button onClick={() => {props.deleteStats()}}>Delete</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <FormGroup className='statsBox'>\r\n            {\r\n                props.stats.stats.map((stat, index) => {\r\n                    return (\r\n                        <div className='stat' key={stat.time}>\r\n                            <Typography>{stat.value}</Typography>\r\n                            <FormControlLabel\r\n                                control = {\r\n                                    <Checkbox\r\n                                        checked={stat.checked}\r\n                                        onChange={(e) => {props.selectStat(e.target.name, e.target.checked)}}\r\n                                        name={stat.title}\r\n                                    />\r\n                                }\r\n                                label={stat.title}\r\n                            />\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n            </FormGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stats","import { homeConstants } from './_constants'\r\n\r\nexport const homeActions = {\r\n    newStat,\r\n    selectStat,\r\n    deleteStats,\r\n    incrementStats,\r\n    decrementStats,\r\n\r\n    newPost\r\n}\r\n\r\nfunction newStat(title, userId, time, value) {\r\n    return {type: homeConstants.STAT_NEW, title, userId, time, value}\r\n}\r\n\r\nfunction selectStat(statName, checked) {\r\n    return {type: homeConstants.STAT_SELECT, statName, checked}\r\n}\r\n\r\nfunction deleteStats() {\r\n    return {type: homeConstants.STAT_DELETE}\r\n}\r\n\r\nfunction incrementStats() {\r\n    return {type: homeConstants.STAT_INCREMENT}\r\n}\r\n\r\nfunction decrementStats() {\r\n    return {type: homeConstants.STAT_DECREMENT}\r\n}\r\n\r\nfunction newPost(sender, postDate, postTitle, postBody) {\r\n    return {type: homeConstants.POST_NEW, sender, postDate, postTitle, postBody}\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport '../style/home.scss'\r\nimport MessageBoard from '../components/messageBoard'\r\nimport Stats from '../components/stats'\r\nimport { homeActions } from '../actions/homeActions';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <main className='homeBody'>\r\n                <Typography variant='h1'>HOME</Typography>\r\n                <div>\r\n                    <Typography variant='h3'>Stats</Typography>\r\n                    <div className='statsBody'>\r\n                        <Stats stats={this.props.stats}\r\n                               increaseStats={this.props.increaseStats}\r\n                               decreaseStats={this.props.decreaseStats}\r\n                               deleteStats={this.props.deleteStats}\r\n                               selectStat={this.props.selectStats}\r\n                               newStat={this.props.newStats}\r\n                               user={this.props.user}/>\r\n                    </div>\r\n                    <Typography variant='h3'>Message Board</Typography>\r\n                    <div className='messageBody'>\r\n                        <MessageBoard posts={this.props.posts} \r\n                                      newPost={this.props.newPost}/>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.posts,\r\n        stats: state.stats, \r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        increaseStats: () => {dispatch(homeActions.incrementStats())},\r\n        decreaseStats: () => {dispatch(homeActions.decrementStats())},\r\n        deleteStats: () => {dispatch(homeActions.deleteStats())},\r\n        selectStats: (statName, checked) => {dispatch(homeActions.selectStat(statName, checked))},\r\n        newStats: (title, userId, time, value) => {dispatch(homeActions.newStat(title, userId, time, value))},\r\n\r\n        newPost: (poster, postDate, postTitle, postBody) => {dispatch(homeActions.newPost(poster, postDate, postTitle, postBody))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import { loginConstants } from './_constants';\r\nimport { history } from '../store'\r\n\r\nexport const loginActions = {\r\n    login,\r\n    logout,\r\n    register\r\n}\r\n\r\nfunction login(userName, password) {\r\n    if (userName === 'admin' && password === 'pass') {\r\n        history.push('/home')\r\n        sessionStorage.setItem('user', JSON.stringify('prestent'));\r\n        return {type: loginConstants.LOGIN_SUCCESS}\r\n    } else {\r\n        return {type: loginConstants.LOGIN_FAILURE}\r\n    }\r\n}\r\n\r\nfunction logout() {\r\n    return {type: loginConstants.LOGOUT}\r\n}\r\n\r\nfunction register(username, password) {\r\n    return  {}\r\n}   ","\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport '../style/login.scss'\r\nimport { loginActions } from '../actions/loginActions'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userName: '',\r\n            password: ''\r\n        }\r\n\r\n        this.submitLogin = this.submitLogin.bind(this);\r\n        this.loginChange = this.loginChange.bind(this);\r\n        this.formRef = React.createRef();\r\n    }\r\n\r\n    loginChange (e) {\r\n        const {name, value} = e.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    submitLogin (e) {\r\n        e.preventDefault();\r\n\r\n        const { userName, password } = this.state;\r\n\r\n        if (userName && password) {\r\n            this.props.login(userName, password)\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form className='loginForm' onSubmit={this.submitLogin} submit='this.submitLogin'> \r\n                <h2 className=\"title\">Login to Home</h2>\r\n                <TextField className='upField' id='standard-basic' label='Username' name='userName' onChange={this.loginChange}/>\r\n                <TextField className='upField' id='standard-basic' label='Password' name='password' onChange={this.loginChange}/>\r\n                <Button className='loginButton' color='primary' type='submit'>\r\n                    Login\r\n                </Button>\r\n                <p className='createAccount'>New to the House?<span className='createAccountBtn' onClick={this.createAccount}> Create Account!</span></p>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userName: state.userName,\r\n        password: state.password\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        login: (userName, password) => {dispatch(loginActions.login(userName, password))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Login);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport '../style/builds.scss'\r\n\r\n\r\nclass Builds extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <main className='buildBody' gutterButtom>\r\n                <Typography variant='h1'>BUILDS</Typography>\r\n                <div>\r\n                    <div>\r\n                        <Typography variant='h3'>All Builds</Typography>\r\n                        <div className='allBuildBox'>\r\n                            info goes here\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Typography variant='h3'>My Builds</Typography>\r\n                        <div className='myBuildBox'>\r\n                            info goes here\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Builds);","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport '../style/contribution.scss'\r\n\r\nconst Contribution = (props) => {\r\n    return (\r\n        <div className='contribBody'>\r\n            <div className='contribTitle'>\r\n                <Typography className=''>Your </Typography>\r\n                {\r\n                    props.type === 'stats' ? <Typography>Stats</Typography>:\r\n                    props.type === 'posts' ? <Typography>Posts</Typography>: null\r\n                }\r\n            </div>\r\n            {\r\n                props.contribs.map((contrib, index) => {\r\n                    return (\r\n                        <div className='contribEntry' key={contrib.time.toString()}>\r\n                            <Typography>{ contrib.title }: { props.type === 'stats' ? contrib.value : null }</Typography>\r\n                            <Typography>Posted At: { contrib.time }</Typography>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contribution","import { createSelector } from 'reselect'\r\n\r\nconst postSelector = state => state.posts.posts\r\nconst statSelector = state => state.stats.stats\r\nconst userSelector = state => state.user.user\r\n\r\nexport const userPostSelector = createSelector(\r\n    postSelector,\r\n    userSelector,\r\n    // eslint-disable-next-line\r\n    (posts, user) => {return posts.filter((post) => {if(post.userId === user.userId){ return post }})}\r\n)\r\n\r\nexport const userStatSelector = createSelector(\r\n    statSelector,\r\n    userSelector,\r\n    // eslint-disable-next-line\r\n    (stats, user) => {return stats.filter((stat) => {if (stat.userId === user.userId) { return stat }})}\r\n)","import { accountConstants } from './_constants'\r\n\r\nexport const accountActions = {\r\n    changePassword,\r\n    changeIcon\r\n}\r\n\r\nfunction changePassword(newPassword, oldPassword) {\r\n    return {type: accountConstants.PWD_CHANGE, newPassword, oldPassword}\r\n}\r\n\r\nfunction changeIcon(newIcon) {\r\n    return {type: accountConstants.ICON_CHANGE, newIcon}\r\n}","import React from 'react'\r\nimport { Typography, Avatar, Tooltip, TextField, Button } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\n\r\nimport '../style/account.scss'\r\nimport Contribution from '../components/contribution'\r\nimport { userPostSelector, userStatSelector } from '../selectors/accountSelector'\r\nimport { accountActions } from '../actions/accountActions'\r\n\r\nclass Account extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            newPasswordRepeat: '',\r\n            newIcon: '',\r\n            passwordErrorMessage: ''\r\n        }\r\n        this.changeIcon = this.changeIcon.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n        this.updatePassword = this.updatePassword.bind(this)\r\n        this.updateIcon = this.updateIcon.bind(this)\r\n    }\r\n\r\n    changePassword(event) {\r\n        event.preventDefault()\r\n\r\n        if (this.state.newPassword === this.state.newPasswordRepeat) {\r\n            this.props.changePassword(this.state.newPassword)\r\n            this.setState({passwordErrorMessage: 'Your password has been changed'})\r\n        } else {\r\n            this.setState({passwordErrorMessage: 'Your passwords do not match'})\r\n        }\r\n    }\r\n\r\n    updatePassword(event) {\r\n        switch(event.target.name) {\r\n            case 'oldPwd':\r\n                this.setState({oldPassword: event.target.value})\r\n                return\r\n            case 'newPwd':\r\n                this.setState({newPassword: event.target.value})\r\n                return\r\n            case 'newPwdRepeat':\r\n                this.setState({newPasswordRepeat: event.target.value})\r\n                return\r\n            default:\r\n                return\r\n        }   \r\n    }\r\n\r\n    changeIcon(event) {\r\n        event.preventDefault()\r\n        this.props.changeIcon(this.state.newIcon)\r\n    }\r\n\r\n    updateIcon(event) {\r\n\r\n        this.setState({newIcon: event.target.value})\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <main className='accountBody'>\r\n                <Typography variant='h1'>Account</Typography>\r\n                <div>\r\n                    <div>\r\n                        <Typography variant='h3'>Account Info</Typography>\r\n                        <div className='infoBox'>\r\n                            <div>\r\n                                <Tooltip title='Change Avatar'>\r\n                                    <Avatar alt='Remy Sharp' className='profileIcon' src={this.props.user.icon}/>\r\n                                </Tooltip>\r\n                                <Typography>{this.props.user.username}</Typography>\r\n                            </div>\r\n                            <div className='changeIconBox'>\r\n                                <Typography>Change Icon</Typography>\r\n                                <form onSubmit={this.changeIcon}>\r\n                                    <TextField label='Link to New Image' onChange={this.updateIcon}/>\r\n                                    <Button type='submit'>Change</Button>\r\n                                </form>\r\n                            </div>\r\n                            <div className='changePasswordBox'>\r\n                                <Typography>Change Password</Typography>\r\n                                <Typography className='pwdErrorMessage'>{this.state.passwordErrorMessage}</Typography>\r\n                                <form onSubmit={this.changePassword}>\r\n                                    <TextField label='Old Password' name='oldPwd' onChange={this.updatePassword}/>\r\n                                    <TextField label='New Password' name='newPwd' onChange={this.updatePassword}/>\r\n                                    <TextField label='Repeat' name='newPwdRepeat' onChange={this.updatePassword}/>\r\n                                    <Button type='submit'>Change</Button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Typography variant='h3'>My Contributions</Typography>\r\n                        <div className='contribBox'>\r\n                            <Contribution type='stats' contribs={this.props.stats}/>\r\n                            <Contribution type='posts' contribs={this.props.posts}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user,\r\n        posts: userPostSelector(state),\r\n        stats: userStatSelector(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeIcon: (newIcon) => {dispatch(accountActions.changeIcon(newIcon))},\r\n        changePassword: (newPassword, oldPassword) => {dispatch(accountActions.changePassword(newPassword, oldPassword))},\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Account)","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const { component: Component, ...props } = this.props\r\n\r\n    return (\r\n      <Route \r\n        {...props} \r\n        render = {props => (\r\n          this.props.authenticated.loggedIn ?\r\n            <Component {...props} /> :\r\n            <Redirect to='/login' />\r\n        )} \r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.loginReducer\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProtectedRoute);","import React from 'react'\r\nimport '../style/not_found.scss'\r\n\r\nclass Login extends React.Component {\r\n\r\n    render () {\r\n        return (\r\n            <div className='notText'>\r\n                This page does not exist!\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport { Divider, ListItem, ListItemText, List } from '@material-ui/core';\r\n\r\nclass Nav extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTab: 'home',\r\n\r\n        }\r\n    }\r\n\r\n    setCurrentTab (nextTab) {\r\n        this.setState({currentTab: nextTab})\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <nav>\r\n                <Drawer\r\n                    open={true}\r\n                    variant='permanent'\r\n                    anchor='left'>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button component={Link} to='/home/account'>\r\n                            <ListItemText primary='Account'/>\r\n                        </ListItem>\r\n                        <ListItem button component={Link} to='/home'>\r\n                            <ListItemText primary='Home'/>\r\n                        </ListItem>\r\n                        <ListItem button component={Link} to='/home/HUGO'>\r\n                            <ListItemText primary='HUGO'/>\r\n                        </ListItem>\r\n                        <ListItem button component={Link} to='/home/builds'>\r\n                            <ListItemText primary='Builds'/>\r\n                        </ListItem>\r\n                        <ListItem button component={Link} to='/home/net'>\r\n                            <ListItemText primary='Networking'/>\r\n                        </ListItem>\r\n                    </List>\r\n                </Drawer>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentTab: state.currentTab\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Nav);","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport '../style/network.scss'\r\n\r\nclass Network extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main className='networkBody'>\r\n                <Typography variant='h1'>Account</Typography>\r\n                <div>\r\n                    <div>\r\n                        <Typography variant='h3'>Network Info</Typography>\r\n                        <div className='netInfoBox'>\r\n                            info goes here\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Typography variant='h3'>DNS stats</Typography>\r\n                        <div className='DNSBox'>\r\n                            info goes here\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Network)","import React, { useState, useEffect } from 'react'\r\nimport { startOfMonth, format, addDays, isMonday, subDays, isEqual } from 'date-fns'\r\n\r\nconst Month = (props) => {\r\n    \r\n    const [days, setDays] = useState([]) \r\n\r\n\r\n    useEffect(() => {\r\n        setDays(genDays())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props])\r\n\r\n    //eventually make this a callback\r\n    const genDays = () => {\r\n        let days = []\r\n        let calendarStart = startOfMonth(props.currentDate)\r\n        \r\n        while (!isMonday(calendarStart)) {\r\n            calendarStart = subDays(calendarStart, 1)\r\n        }\r\n\r\n        for (let i = 0; i < 35; i++) {\r\n            let pushed = false\r\n            props.HUGOEntries.forEach((entry)=>{\r\n                if(isEqual(entry.date, addDays(calendarStart, i))) {\r\n                    days.push({entry: entry, day: addDays(calendarStart, i)})\r\n                    pushed = true\r\n                }\r\n            })\r\n\r\n            if (!pushed) {\r\n                days.push({entry: null, day: addDays(calendarStart, i)})\r\n            }\r\n        }\r\n\r\n        return days\r\n    }\r\n\r\n    return (\r\n        <div className='monthCalBody'>\r\n            <div className='monthCalBody'>\r\n                <div className='weekDayHeader'>\r\n                    {\r\n                        Array(7).fill().map((value, index) => {\r\n                            return(\r\n                                <span key={'monthHeader' + index.toString()}>{format(addDays(new Date(), index), 'EEEE')}</span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className='monthBody'>\r\n                    {\r\n                        days.map((day, index) => {\r\n                            return(\r\n                                <div className='monthCell' style={props.setCellColor(day)} key={'month' + day.toString() + index.toString()}>\r\n                                    <span className='monthCellLabel'>{format(day.day, 'd')}</span>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Month","import React, {useState, useEffect} from 'react'\r\nimport { startOfYear, format, addDays, isMonday, subDays, isEqual, addMonths, getDaysInYear } from 'date-fns'\r\n\r\nconst Year = (props) => {\r\n\r\n    const [days, setDays] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        setDays(genDays())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props])\r\n\r\n    const genDays = () => {\r\n        let days = []\r\n        let calendarStart = startOfYear(props.currentDate)\r\n        let emptyDays = startOfYear(props.currentDate) \r\n\r\n        while (!isMonday(emptyDays)) {\r\n            emptyDays = subDays(emptyDays, 1)\r\n            days.push({entry: null, day: 'empty'})\r\n        }\r\n\r\n        for (let i = 0; i < getDaysInYear(calendarStart); i++) {\r\n            let pushed = false\r\n            props.HUGOEntries.forEach((entry, index)=>{\r\n                if(isEqual(entry.date, addDays(calendarStart, i))) {\r\n                    days.push({entry: entry, day: addDays(calendarStart, i)})\r\n                    pushed = true\r\n                }\r\n            })\r\n\r\n            if (!pushed) {\r\n                days.push({entry: null, day: addDays(calendarStart, i)})\r\n            }\r\n        }\r\n\r\n        return days\r\n    }\r\n\r\n    return (\r\n        <div className='yearBody'>\r\n            <div className='yearHeaders'>\r\n                {\r\n                    Array(12).fill().map((value, index) => {\r\n                        return(\r\n                            <span key={'yearHeader' + index.toString()}>{format(addMonths(startOfYear(props.currentDate), index), 'MMMM')}</span>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className='yearContent'>\r\n                {\r\n                    days.map((day, index) => {\r\n                        if (typeof day.day === 'string') {\r\n                            return (\r\n                                <div className='emptyCell' key={day.toString() + index.toString() + 'yearCont'}>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <div key={day.toString() + index.toString() + 'yearCont'} className={'yearCell ' + index} style={props.setCellColor(day)} name={day.day.toString()}>\r\n                                </div>\r\n                            )\r\n                        }   \r\n                    })\r\n                }\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Year","import React, { useState, useEffect } from 'react'\r\nimport { format, addDays, isEqual, startOfWeek } from 'date-fns'\r\n\r\nconst Week = (props) => {\r\n\r\n    const [days, setDays] = useState([])\r\n\r\n    useEffect(() => {\r\n        setDays(genDays())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props])\r\n\r\n    const genWeekDay = (entry, keyPart) => {\r\n        let hours = []\r\n        let currentTime = 0\r\n\r\n        while (currentTime < 24) {\r\n            hours.push(<div  key={(Math.random() + 1).toString(36).substring(7)} className='hourCell' style={{backgroundColor: props.HUGOColor.colorMin}}>hour: {currentTime}</div>)\r\n            currentTime ++;\r\n        }\r\n\r\n        if (entry === 'empty') {\r\n            return hours\r\n\r\n        } else {\r\n            entry.events.forEach((event, index) => {\r\n                let eventLength = event.end - event.start\r\n\r\n                for(let i = 0; i < eventLength + 1; i++) {\r\n                    hours[event.start + i] =  <div key={(Math.random() + 1).toString(36).substring(7)} className='hourCell' style={props.setHourCellColor(event)}>HUGO IS HERE</div>\r\n                }\r\n            })\r\n\r\n            return hours\r\n        }\r\n    }\r\n\r\n    const genDays = () => {\r\n        let days = []\r\n        let calendarStart = startOfWeek(props.currentDate, {weekStartsOn: 1})\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            let pushed = false\r\n            props.HUGOEntries.forEach((entry, index)=>{\r\n                if(isEqual(entry.date, addDays(calendarStart, i))) {\r\n                    days.push({entry: entry, day: addDays(calendarStart, i)})\r\n                    pushed = true\r\n                }\r\n            })\r\n\r\n            if (!pushed) {\r\n                days.push({entry: 'empty', day: addDays(calendarStart, i)})\r\n            }\r\n        }\r\n\r\n        return days\r\n    }\r\n\r\n    return (\r\n        <div className='weekBox'>\r\n            <div className='weekHeaders'>\r\n                {\r\n                    Array(6).fill().map((item, index) => {\r\n                        return (\r\n                            <span key={'weekHeadKey' + index.toString()}>{format(addDays(startOfWeek(props.currentDate, {weekStartsOn: 1}), index), 'EEEE')}</span>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className='weekContent'>\r\n                {\r\n                    days.map((day, index) => {\r\n\r\n                        return (\r\n                            <div className='weekDayCell' key={'weekCell' + day.toString() + index.toString()}>\r\n                                <div>{format(day.day, 'dd')}</div>\r\n                                {   \r\n                                    genWeekDay(day.entry, )\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Week","import React, { useState, useEffect } from 'react'\r\nimport { Typography, Button, AppBar, Tabs, Tab } from '@material-ui/core'\r\nimport { subWeeks, subYears, endOfYear, endOfMonth, startOfMonth, addMonths, subMonths, format, addDays, isMonday, subDays, addWeeks, addYears, startOfWeek, startOfYear, endOfWeek } from 'date-fns'\r\nimport tinycolor from 'tinycolor2'\r\nimport { MaterialPicker } from 'react-color'\r\n\r\nimport '../../style/calendar.scss'\r\nimport Month from './month'\r\nimport Year from './year'\r\nimport Week from './week'\r\n\r\nconst Calendar = (props) => {\r\n\r\n    const [selected, setSelected] = useState('month')\r\n    const [datePaginate, setDatePaginate] = useState(props.currentDate)\r\n    const [startValue, setStartValue] = useState(startOfMonth(props.currentDate))\r\n    const [endValue, setEndValue] = useState(endOfMonth(props.currentDate))\r\n    const [minChanger, setMinChanger] = useState(true)\r\n    const [maxChanger, setMaxChanger] = useState(true)\r\n\r\n    const colorMax = props.HUGOColor.colorMax\r\n    const colorMin = props.HUGOColor.colorMin\r\n\r\n    const valueMax = props.HUGOColor.valueMax\r\n\r\n    useEffect(() => {\r\n        setNewBounds()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selected, datePaginate])\r\n\r\n    useEffect(() => {\r\n        props.changeView(selected, {start: startValue, end: endValue})\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [startValue, endValue])\r\n\r\n    function handleTabChange(event, newTab) {\r\n        setSelected(newTab)\r\n    }\r\n\r\n    const handleMaxChange = (color) => {\r\n        props.changeColor(tinycolor(color.hex), colorMin)\r\n    }\r\n\r\n    const handleMinChange = (color) => {\r\n        props.changeColor(colorMax, tinycolor(color.hex))\r\n    }\r\n\r\n    const changeColor = (event) => {\r\n        if (event.target.className === 'valueMaxColor') {\r\n            setMaxChanger(!maxChanger)\r\n        } else if (event.target.className === 'valueMinColor') {\r\n            setMinChanger(!minChanger)\r\n        }\r\n    }\r\n\r\n    const setNewBounds = () => {\r\n        let newStart, newEnd\r\n        if (selected === 'week') {\r\n            newStart = startOfWeek(datePaginate, { weekStartsOn: 1 })\r\n            newEnd = endOfWeek(newStart, { weekStartsOn: 1 })\r\n        } else if(selected === 'month') {\r\n\r\n            newStart =  startOfMonth(datePaginate)\r\n            while (!isMonday(newStart)) {\r\n                newStart = subDays(newStart, 1)\r\n            }\r\n            newEnd = addDays(newStart, 34)\r\n\r\n        } else if(selected === 'year') {\r\n            newStart = startOfYear(datePaginate)\r\n            newEnd = endOfYear(newStart)\r\n        }\r\n\r\n        setStartValue(newStart)\r\n        setEndValue(newEnd)\r\n    }\r\n\r\n    const paginateInc = (event) => {\r\n        let newDate\r\n\r\n        if (selected === 'week') {\r\n            newDate = addWeeks(datePaginate, 1)\r\n        } else if(selected === 'month') {\r\n            newDate = addMonths(datePaginate, 1)\r\n        } else if(selected === 'year') {\r\n            newDate = addYears(datePaginate, 1)\r\n        }\r\n        setDatePaginate(newDate)\r\n    }\r\n\r\n    const paginateDec = (event) => { \r\n        let newDate\r\n\r\n        if (selected === 'week') {\r\n            newDate = subWeeks(datePaginate, 1)\r\n        } else if(selected === 'month') {\r\n            newDate = subMonths(datePaginate, 1)\r\n        } else if(selected === 'year') {\r\n            newDate = subYears(datePaginate, 1)\r\n        }\r\n        setDatePaginate(newDate)\r\n    }\r\n\r\n    const setCellColor = (day) => {\r\n        if (day.entry === null) {\r\n\r\n            return {backgroundColor: colorMin}\r\n        } else {\r\n            let totalLength = 0\r\n            day.entry.events.forEach((event) => {\r\n                let length = event.end - event.start\r\n                totalLength += length\r\n            })\r\n\r\n            return {backgroundColor: tinycolor.mix(colorMin, colorMax, (totalLength/valueMax)*100)}\r\n        }\r\n    }\r\n\r\n    const setHourCellColor = (event) => {\r\n        if (typeof(event.overflow) === 'undefined') {\r\n            return {backgroundColor: tinycolor.mix(colorMin, colorMax, ((event.end - event.start)/valueMax)*100)}\r\n        } else {\r\n            return {backgroundColor: tinycolor.mix(colorMin, colorMax, (event.overflow/valueMax)*100)}\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Typography>Current Date: {new Date().toString()}</Typography>\r\n                <div>\r\n                    <div className='monthPaginate'>\r\n                        <Button onClick={paginateInc}>Next</Button>\r\n                        <Typography>Current Month: {format(datePaginate, 'MMMM')} {format(datePaginate, 'y')}</Typography>\r\n                        <Button onClick={paginateDec}>Previous</Button>\r\n                    </div>\r\n                    <div className='sampleBody'>\r\n                        <div hidden={minChanger}>\r\n                            <MaterialPicker color={colorMin}\r\n                                            onChangeComplete={handleMinChange}/>\r\n                        </div>\r\n                        <div className='valueMinColor' onClick={changeColor} style={{background: colorMin}}>\r\n                        </div>\r\n                        <Typography>0</Typography>\r\n                        <div className='colorSampleCellBody'>\r\n                            {\r\n                                Array(10).fill().map((value, index) => {\r\n                                    return (\r\n                                        <div key={'colorKey'+index.toString()} className='colorSampleCell' style={{backgroundColor: tinycolor.mix(colorMin, colorMax, index*10)}}></div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <Typography>{valueMax}</Typography>\r\n                        <div className='valueMaxColor' onClick={changeColor} style={{background: colorMax}}>\r\n                        </div>\r\n                        <div hidden={maxChanger}>\r\n                            <MaterialPicker color={colorMax}\r\n                                            onChangeComplete={handleMaxChange}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <AppBar position='static'>\r\n                        <Tabs value={selected} onChange={handleTabChange}>\r\n                            <Tab label='Week' value='week'/>\r\n                            <Tab label='Month' value='month'/>\r\n                            <Tab label='Year' value='year'/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <div hidden={selected !== 'week'}>\r\n                        <Week currentDate={datePaginate}\r\n                              setHourCellColor={setHourCellColor}  \r\n                              HUGOEntries={props.HUGOEntries} \r\n                              HUGOColor={props.HUGOColor}/>\r\n                    </div>\r\n                    <div hidden={selected !== 'month'}>\r\n                        <Month currentDate={datePaginate}\r\n                               setCellColor={setCellColor}  \r\n                               HUGOEntries={props.HUGOEntries} \r\n                               HUGOColor={props.HUGOColor}/>\r\n                    </div>\r\n                    <div hidden={selected !== 'year'}>\r\n                        <Year currentDate={datePaginate}\r\n                              setCellColor={setCellColor} \r\n                              HUGOEntries={props.HUGOEntries} \r\n                              HUGOColor={props.HUGOColor}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar","import { createSelector } from 'reselect'\r\nimport { isWithinInterval } from 'date-fns'\r\n\r\nconst HUGOFilter = state => state.HUGOEntries.HUGOFilter\r\nconst HUGOEntries = state => state.HUGOEntries.HUGOItems\r\n\r\nexport const HUGOEntriesSelector = createSelector(\r\n    [ HUGOFilter, HUGOEntries ],\r\n    (HUGOFilter, HUGOEntries) => {\r\n        switch (HUGOFilter.type) {\r\n            case 'year':\r\n                return HUGOEntries\r\n            case 'month':\r\n                // eslint-disable-next-line\r\n                return HUGOEntries.filter((entry, index) => {\r\n                    if(isWithinInterval(entry.date, HUGOFilter.interval)){\r\n                        return entry\r\n                    }\r\n                })\r\n            case 'week':\r\n                // eslint-disable-next-line\r\n                return HUGOEntries.filter((entry, index) => {\r\n                    if(isWithinInterval(entry.date, HUGOFilter.interval)){\r\n                        return entry\r\n                    }\r\n                })\r\n            default:\r\n                return\r\n        }\r\n    }\r\n)","import { HUGOConstants } from '../actions/_constants'\r\n\r\nexport const HUGOActions = {\r\n    newHugoEntry,\r\n    deleteHugoEntry,\r\n    changeHugoView,\r\n    setHugoColor, \r\n    setHugoValue\r\n}\r\n\r\nfunction newHugoEntry() {\r\n\r\n    return {type: HUGOConstants.HUGO_ENTRY}\r\n}\r\n\r\nfunction deleteHugoEntry(id) {\r\n\r\n    return {type: HUGOConstants.HUGO_ENTRY_DELETE, id}\r\n}\r\n\r\nfunction changeHugoView(filterType, interval) {\r\n\r\n    return {type:HUGOConstants.CHANGE_CALENDAR_VIEW, filterType, interval}\r\n}\r\n\r\nfunction setHugoColor(colorMax, colorMin) {\r\n\r\n    return {type: HUGOConstants.SET_HUGO_COLOR, colorMax, colorMin}\r\n}\r\n\r\nfunction setHugoValue(valueMax, valueMin) {\r\n\r\n    return {type: HUGOConstants.SET_HUGO_VALUE, valueMax, valueMin}\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport Calendar from '../components/calendar/calendar'\r\nimport {HUGOEntriesSelector} from '../selectors/HUGOSelector'\r\nimport {HUGOActions} from '../actions/HUGOactions'\r\n\r\n\r\nclass HUGO extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            currentDate: new Date(2020, 4, 1)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <main className='buildBody'>\r\n                <Typography variant='h1'>HUGO Predictor</Typography>\r\n                <div>\r\n                    <div>\r\n                        <Typography variant='h3'>Overview</Typography>\r\n                        <div className='allBuildBox'>\r\n                            <Calendar currentDate={this.state.currentDate} \r\n                                      HUGOEntries={this.props.HUGOEntries} \r\n                                      changeView={this.props.changeCalendarView}\r\n                                      changeColor={this.props.changeColor}\r\n                                      HUGOColor={this.props.HUGOColor}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        HUGOEntries: HUGOEntriesSelector(state),\r\n        HUGOColor: state.HUGOEntries.HUGOColor\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeCalendarView: (type, interval) => dispatch(HUGOActions.changeHugoView(type, interval)),\r\n        changeColor: (colorMax, colorMin) => dispatch(HUGOActions.setHugoColor(colorMax, colorMin))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HUGO)","import React from 'react';\r\nimport {\r\n  Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom'\r\n\r\n\r\nimport './style/app.scss';\r\nimport { history } from './store'\r\nimport Home from './pages/home'\r\nimport Login from './pages/login'\r\nimport Builds from './pages/builds'\r\nimport Account from './pages/account'\r\nimport ProtectedRoute from './connected/protectedRoute'\r\nimport NotFound from './pages/notFound'\r\nimport Nav from './connected/nav'\r\nimport Network from './pages/network'\r\nimport HUGO from './pages/HUGO'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={history}>\r\n      <Route path='/home' component={Nav}/>\r\n      <Switch>\r\n        <Redirect exact from=\"/\" to=\"/login\"/>\r\n        <Route path='/login' component={Login}/>\r\n        <ProtectedRoute exact path='/home' component={Home}/>\r\n        <ProtectedRoute exact path='/home/builds' component={Builds}/>\r\n        <ProtectedRoute exact path='/home/account' component={Account}/>\r\n        <ProtectedRoute exact path='/home/net' component={Network}/>\r\n        <ProtectedRoute exact path='/home/HUGO' component={HUGO}/>\r\n        <ProtectedRoute component={NotFound}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.scss';\r\nimport App from './app';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store'\r\nimport { loginConstants } from './actions/_constants'\r\n\r\n\r\nconst user = JSON.parse(sessionStorage.getItem('user'));\r\n\r\nif (user) {\r\n    store.dispatch({type: loginConstants.LOGIN_SUCCESS});\r\n}\r\n\r\nReactDOM.render(  \r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}